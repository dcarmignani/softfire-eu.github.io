{
    "docs": [
        {
            "location": "/", 
            "text": "SoftFIRE\n\n\nSoftFIRE is an European project providing a federated infrastructure composed by individual testbeds located in different locations in Europe. The SoftFIRE platofmr provides on-demand capabilities for experimenters playing with NFV/SDN/MEC technologies for building up the 5\nth\n Generation of Mobile Network.\n\n\nThe SoftFIRE architecture\n\n\n\n\nGet in contact\n\n\n\n\nOur website: \nhttp://softfire.eu\n\n\nSending us an email to \nour mailing list\n\n\n\n\n\n\n\n\n      // Creating custom :external selector\n      $.expr[':'].external = function(obj){\n          return !obj.href.match(/^mailto\\:/)\n                  && (obj.hostname != location.hostname);\n      };\n      $(function(){\n        $('a:external').addClass('external');\n        $(\".external\").attr('target','_blank');\n      })", 
            "title": "Introduction"
        }, 
        {
            "location": "/#softfire", 
            "text": "SoftFIRE is an European project providing a federated infrastructure composed by individual testbeds located in different locations in Europe. The SoftFIRE platofmr provides on-demand capabilities for experimenters playing with NFV/SDN/MEC technologies for building up the 5 th  Generation of Mobile Network.", 
            "title": "SoftFIRE"
        }, 
        {
            "location": "/#the-softfire-architecture", 
            "text": "", 
            "title": "The SoftFIRE architecture"
        }, 
        {
            "location": "/#get-in-contact", 
            "text": "Our website:  http://softfire.eu  Sending us an email to  our mailing list    \n      // Creating custom :external selector\n      $.expr[':'].external = function(obj){\n          return !obj.href.match(/^mailto\\:/)\n                  && (obj.hostname != location.hostname);\n      };\n      $(function(){\n        $('a:external').addClass('external');\n        $(\".external\").attr('target','_blank');\n      })", 
            "title": "Get in contact"
        }, 
        {
            "location": "/wiki/", 
            "text": "Registration to the Tools\n\n\n\n\nregister at the portal (alredy done)\n\n\nregister to redmine \nthis page\n and create an account (Introduction to the redmine tool: \nREDMINE\n)\n\n\ninstall and configure \nopenvpn\n\n\nconfigure \njfed\n\n\nprepare your experiment\n\n\nexecute the experiment\n\n\nretrieve the results\n\n\n\n\nWe invite the experimenters to use the Issues to address specific problems or support requests. You can also visit the \nForums\n section to open a new discussion or to find useful information shared in the community\n\n\nOpenVPN setup\n\n\n\n\nInstall openVPN for your platform\n\n\nuse the configuration file downloaded from the portal\n\n\nstart OpenVPN client with administrative rights (or sudo on linux) using the configuration file\n\n\n\n\n\n\nNote\n\n\nif the download does not work create the configuration file manually (\nOpenVpnConfig\n)\n\n\n\n\njFed setup\n\n\nHere is described the small procedure to follow in order to get \njFed\n up and running.\n\n\nPre-requisites\n\n\n\n\nJava 8 installed\n\n\nOpenVPN installed and connected\n\n\nDownload the jFed.zip from \nhere\n. Password for the download is \nsoftfire\n\n\nunzip the jFed.zip\n\n\nCertificate and private key for jFed in one file, called e.g. \ncert.pem\n\n\n\n\nSteps\n\n\n\n\nGet the following files:\n\n\nauthorities.xml\n\n\nconfig.xml\n\n\n\n\nPut the authorities.xml to \nyour_home_folder>/.jfed/\n\n\n\n\n\n\nStart jFed:  \njava -jar experimenter-gui-5.6.3-jfx.jar --config=\npath to your config.xml>\n\n\n\n\nPoint to your certificate and enter the chosen password\n\n\n\n\nDesign your experiment\n\n\nThis document\n  provides a detailed tutorial on how to implement your experiment\n\n\nExecute your experiment\n\n\n\n\n\n\n\n\nOption 1 using jFed\n\n\nOption 2 direct usage of OpenBaton\n\n\n\n\n\n\n\n\n\n\nStart jFed: \njava -jar experimenter-gui-5.6.3-jfx.jar --config=\npath to your config.xml>\n\n\naccess openbaton machine at \nopenbaton.vpn.softfire.eu:5081\n\n\n\n\n\n\nPoint to your certificate and enter the chosen password\n\n\nrequest credential to your mentor if you don't have it yet\n\n\n\n\n\n\nGo to the \nSoftfire Software Portal\n and log in\n\n\nyou have full rights in your project\n\n\n\n\n\n\nUpload your package\n\n\nupload the VNFPackage in the correct page from the menu\n\n\n\n\n\n\nIn jFed click \nNew\n\n\nif the package is correct, it will result in a new VNF Descriptor\n\n\n\n\n\n\nDrag and drop a \nGeneric Node\n to the topology canvas\n\n\ncombine multiple VNF Descriptor in the NSD create page, creating then the NSD\n\n\n\n\n\n\nDoubleclick or Rightclick and select \nConfigure Node\n  the node (Properties window should appear)\n\n\nlaunch the NSD. This will result in the NSR, your experiment\n\n\n\n\n\n\nName the node as you like\n\n\n-\n\n\n\n\n\n\nSelect testbed \nfiteagle.vpn.softfire.eu\n from the \nSelect Testbed\n dropdown\n\n\n-\n\n\n\n\n\n\nSelect \nSpecific Node\n\n\n-\n\n\n\n\n\n\nSelect your package from the dropdown\n\n\n-\n\n\n\n\n\n\nClick \nSave\n\n\n-\n\n\n\n\n\n\nClick the green arrow \nRun\n button\n\n\n-\n\n\n\n\n\n\nName your experiment (experiment names should be unique!)\n\n\n-\n\n\n\n\n\n\nRemove the check from \nProject\n\n\n-\n\n\n\n\n\n\nClick \nStart Experiment\n\n\n-\n\n\n\n\n\n\nWait for some seconds until your Node is coloured dark green\n\n\n-\n\n\n\n\n\n\nYour experiment should be ready and you can connect to the node via SSH\n\n\n-\n\n\n\n\n\n\n\n\nTestbeds Information and usage\n\n\n\n\nSoftFIRE infrastructure monitoring \nZABBIX\n\n\nInterconnection Benchmarks: \nVPNBenachmark\n\n\n\n\n\n\n\n\n      // Creating custom :external selector\n      $.expr[':'].external = function(obj){\n          return !obj.href.match(/^mailto\\:/)\n                  && (obj.hostname != location.hostname);\n      };\n      $(function(){\n        $('a:external').addClass('external');\n        $(\".external\").attr('target','_blank');\n      })", 
            "title": "Getting Started"
        }, 
        {
            "location": "/wiki/#registration-to-the-tools", 
            "text": "register at the portal (alredy done)  register to redmine  this page  and create an account (Introduction to the redmine tool:  REDMINE )  install and configure  openvpn  configure  jfed  prepare your experiment  execute the experiment  retrieve the results   We invite the experimenters to use the Issues to address specific problems or support requests. You can also visit the  Forums  section to open a new discussion or to find useful information shared in the community", 
            "title": "Registration to the Tools"
        }, 
        {
            "location": "/wiki/#openvpn-setup", 
            "text": "Install openVPN for your platform  use the configuration file downloaded from the portal  start OpenVPN client with administrative rights (or sudo on linux) using the configuration file    Note  if the download does not work create the configuration file manually ( OpenVpnConfig )", 
            "title": "OpenVPN setup"
        }, 
        {
            "location": "/wiki/#jfed-setup", 
            "text": "Here is described the small procedure to follow in order to get  jFed  up and running.", 
            "title": "jFed setup"
        }, 
        {
            "location": "/wiki/#pre-requisites", 
            "text": "Java 8 installed  OpenVPN installed and connected  Download the jFed.zip from  here . Password for the download is  softfire  unzip the jFed.zip  Certificate and private key for jFed in one file, called e.g.  cert.pem", 
            "title": "Pre-requisites"
        }, 
        {
            "location": "/wiki/#steps", 
            "text": "Get the following files:  authorities.xml  config.xml   Put the authorities.xml to  your_home_folder>/.jfed/    Start jFed:   java -jar experimenter-gui-5.6.3-jfx.jar --config= path to your config.xml>   Point to your certificate and enter the chosen password", 
            "title": "Steps"
        }, 
        {
            "location": "/wiki/#design-your-experiment", 
            "text": "This document   provides a detailed tutorial on how to implement your experiment", 
            "title": "Design your experiment"
        }, 
        {
            "location": "/wiki/#execute-your-experiment", 
            "text": "Option 1 using jFed  Option 2 direct usage of OpenBaton      Start jFed:  java -jar experimenter-gui-5.6.3-jfx.jar --config= path to your config.xml>  access openbaton machine at  openbaton.vpn.softfire.eu:5081    Point to your certificate and enter the chosen password  request credential to your mentor if you don't have it yet    Go to the  Softfire Software Portal  and log in  you have full rights in your project    Upload your package  upload the VNFPackage in the correct page from the menu    In jFed click  New  if the package is correct, it will result in a new VNF Descriptor    Drag and drop a  Generic Node  to the topology canvas  combine multiple VNF Descriptor in the NSD create page, creating then the NSD    Doubleclick or Rightclick and select  Configure Node   the node (Properties window should appear)  launch the NSD. This will result in the NSR, your experiment    Name the node as you like  -    Select testbed  fiteagle.vpn.softfire.eu  from the  Select Testbed  dropdown  -    Select  Specific Node  -    Select your package from the dropdown  -    Click  Save  -    Click the green arrow  Run  button  -    Name your experiment (experiment names should be unique!)  -    Remove the check from  Project  -    Click  Start Experiment  -    Wait for some seconds until your Node is coloured dark green  -    Your experiment should be ready and you can connect to the node via SSH  -", 
            "title": "Execute your experiment"
        }, 
        {
            "location": "/wiki/#testbeds-information-and-usage", 
            "text": "SoftFIRE infrastructure monitoring  ZABBIX  Interconnection Benchmarks:  VPNBenachmark    \n      // Creating custom :external selector\n      $.expr[':'].external = function(obj){\n          return !obj.href.match(/^mailto\\:/)\n                  && (obj.hostname != location.hostname);\n      };\n      $(function(){\n        $('a:external').addClass('external');\n        $(\".external\").attr('target','_blank');\n      })", 
            "title": "Testbeds Information and usage"
        }, 
        {
            "location": "/softfire-middleware/", 
            "text": "SoftFIRE architecture\n\n\nThe SoftFIRE Middleware is the central software logic of the SoftFIRE platform. It exposes a ReST api that are consumed by a CLI or a Dashboard. The Experimenter can use one of these two tools for interacting with the SoftFIRE platform. The southbound interface is directed to the testbeds. Deutsche Telekom, Fraunhofer FOKUS, Ericsson, University of Surrey and Assembly Data System.\n\n\n\n\nThe SoftFIRE Middleware\n\n\nThe central core logic of the SoftFIRE platform is the SoftFIRE Middleware. The SoftFIRE Middleware is composed by multiple managers, each of them is in charge of a specific kind of resource.\n\n\n\n\nSDN Manager\n manages SDN resources\n\n\nSecurity Manager\n for the Security resources\n\n\nNFV Manager\n is in charge of providing NFV functionalities to the middleware\n\n\nthe \nMonitoring managers\n provide both experimenter and infrastructure monitoring resource access\n\n\nPhysical Device Manager\n handles the access to the physical resources\n\n\n\n\nThe main component of the infrastructure is the \nExperimenter Manager\n (EM). Other managers register to the EM, so the EM is able to redirect the request coming from the Experimenter to the correct specific manager depending on the kind of resource requested. Its main features include:\n\n\n\n\nResource discovery\n\n\nUnderstand the experiment definition\n\n\nResource reservation\n\n\nResource provisioning\n\n\nProvide Experiment Monitoring\n\n\nUser Authentication\n\n\nUser Authorization\n\n\n\n\nThe protocol in between the managers is \ngRPC\n. For that reason each manager can be implemented in any language that supports gRPC.\n\n\nInteractions\n\n\n\n\n\n\n\n\n      // Creating custom :external selector\n      $.expr[':'].external = function(obj){\n          return !obj.href.match(/^mailto\\:/)\n                  && (obj.hostname != location.hostname);\n      };\n      $(function(){\n        $('a:external').addClass('external');\n        $(\".external\").attr('target','_blank');\n      })", 
            "title": "Softfire Middleware"
        }, 
        {
            "location": "/softfire-middleware/#softfire-architecture", 
            "text": "The SoftFIRE Middleware is the central software logic of the SoftFIRE platform. It exposes a ReST api that are consumed by a CLI or a Dashboard. The Experimenter can use one of these two tools for interacting with the SoftFIRE platform. The southbound interface is directed to the testbeds. Deutsche Telekom, Fraunhofer FOKUS, Ericsson, University of Surrey and Assembly Data System.", 
            "title": "SoftFIRE architecture"
        }, 
        {
            "location": "/softfire-middleware/#the-softfire-middleware", 
            "text": "The central core logic of the SoftFIRE platform is the SoftFIRE Middleware. The SoftFIRE Middleware is composed by multiple managers, each of them is in charge of a specific kind of resource.   SDN Manager  manages SDN resources  Security Manager  for the Security resources  NFV Manager  is in charge of providing NFV functionalities to the middleware  the  Monitoring managers  provide both experimenter and infrastructure monitoring resource access  Physical Device Manager  handles the access to the physical resources   The main component of the infrastructure is the  Experimenter Manager  (EM). Other managers register to the EM, so the EM is able to redirect the request coming from the Experimenter to the correct specific manager depending on the kind of resource requested. Its main features include:   Resource discovery  Understand the experiment definition  Resource reservation  Resource provisioning  Provide Experiment Monitoring  User Authentication  User Authorization   The protocol in between the managers is  gRPC . For that reason each manager can be implemented in any language that supports gRPC.", 
            "title": "The SoftFIRE Middleware"
        }, 
        {
            "location": "/softfire-middleware/#interactions", 
            "text": "// Creating custom :external selector\n      $.expr[':'].external = function(obj){\n          return !obj.href.match(/^mailto\\:/)\n                  && (obj.hostname != location.hostname);\n      };\n      $(function(){\n        $('a:external').addClass('external');\n        $(\".external\").attr('target','_blank');\n      })", 
            "title": "Interactions"
        }, 
        {
            "location": "/experiment-definition/", 
            "text": "Experiment definition\n\n\nThe experiment is defined using \nTopology and Orchestration Specification for Cloud Applications\n (TOSCA). In particular, the Experimenter has to create a \nCSAR\n zip file containing all the necessary files and definitions for letting the \nExperimentManager\n (EM) instantiate everything. The structure of the CSAR is defined as following:\n\n\n\u251c\u2500\u2500 Definitions\n\n|\n   \u2514\u2500\u2500 experiment.yaml\n\u251c\u2500\u2500 Files\n\n|\n   \u2514\u2500\u2500 nsd.csar\n\u2514\u2500\u2500 TOSCA-Metadata\n    \u251c\u2500\u2500 Metadata.yaml\n    \u2514\u2500\u2500 TOSCA.meta\n\n\n\nThere are three two mandatory folders plus one optional. \nDefinitions\n and \nTOSCA-Metadata\n are mandatory folder containing the metadata files and the experiment definition, as described in the following sections. the \nFiles\n folder contains some additional files needed in case some resources specifies extra requirements.\n\n\nTOSCA-Metadata\n\n\nThe TOSCA-Metadata folder contains the TOSCA.meta file and the Metadata.yaml file. The TOSCA.meta file must contain the reference to the template in this case \nEntry-Definitions\n:\n \nDefinitions/experiment.yaml\n. For example:\n\n\nTOSCA-Meta-File-Version\n:\n \n1.0\n\n\nCSAR-Version\n:\n \n1.1\n\n\nCreated-By\n:\n \nMyCompany\n\n\nEntry-Definitions\n:\n \nDefinitions/experiment.yaml\n\n\n\n\n\n\nThe Metadata.yaml contains experiment meta information:\n\n\n\n\nthe name\n\n\nthe start date\n\n\nthe end date\n\n\n\n\nAs follows:\n\nname\n:\n \nExperiment Name\n\n\nstart-data\n:\n \n9/5/17\n \n10:00\n\n\nend-data\n:\n \n10/5/17\n \n10:00\n\n\n\n\n\n\nDefinitions\n\n\nThe experiment.yaml must follow a specific structure. An example is show in the following lines:\n\n\ntosca_definitions_version\n:\n \ntosca_simple_yaml_1_0\n\n\n\ndescription\n:\n \nTemplate for SoftFIRE yaml resource request definition\n\n\n\nimports\n:\n\n  \n-\n \nsoftfire_node_types\n:\n \nhttp://docs.softfire.eu/etc/softfire_node_types.yaml\n\n\n\ntopology_template\n:\n\n  \nnode_templates\n:\n\n    \nzabbix_server\n:\n\n      \ntype\n:\n \nMonitoringNode\n\n      \nproperties\n:\n\n        \nresource_id\n:\n \nmonitoring\n\n\n    \nsdn_ericsson\n:\n\n      \ntype\n:\n \nSDNResource\n\n      \nproperties\n:\n\n        \nresource_id\n:\n \nsdn_ericsson\n\n        \ntestbed\n:\n \nericsson\n\n\n    \niperf\n:\n\n      \ntype\n:\n \nNFVResource\n\n      \nproperties\n:\n\n        \nresource_id\n:\n \niperf\n\n        \nnsd_name\n:\n \nThe Iperf NSD\n\n        \ntestbeds\n:\n \n{\n \nALL\n:\n \nericsson\n \n}\n\n\n\n\n\n\nAs shown in the example, the SoftFIRE experiment yaml file must contain the TOSCA definition version as \ntosca_definitions_version\n:\n \ntosca_simple_yaml_1_0\n. This line is followed by a description of the experiment.\n\n\nThe imports section must be specified as in the example because the EM will only accept specific node types defined in \nthis document\n\n\nEach node type specifies a \nresource_id\n that must be chosen from the available resources. The node name is arbitrary. Each node type can have some additional properties and they can be different from each others. Check the \nnode type specification\n to understand all the node types. However, each node type is specified in the specific manager page:\n\n\n\n\nSDNResource\n: \nSDN Manager\n\n\nNFVResource\n: \nNFV Manager\n\n\nMonitoringResource\n: \nMonitoring Manager\n\n\nSecurityResource\n: \nSecurity Manager\n\n\n\n\nTopology Template\n\n\nThe topology template describe the actual experiment. The required nodes are listed in this section. The types are defined in the \nnode types\n definitions, please refer to the specific manager page for the description of the type.\n\n\nFiles\n\n\nExample\n\n\nA full example can be found \nhere", 
            "title": "Define your experiment"
        }, 
        {
            "location": "/experiment-definition/#experiment-definition", 
            "text": "The experiment is defined using  Topology and Orchestration Specification for Cloud Applications  (TOSCA). In particular, the Experimenter has to create a  CSAR  zip file containing all the necessary files and definitions for letting the  ExperimentManager  (EM) instantiate everything. The structure of the CSAR is defined as following:  \u251c\u2500\u2500 Definitions |    \u2514\u2500\u2500 experiment.yaml\n\u251c\u2500\u2500 Files |    \u2514\u2500\u2500 nsd.csar\n\u2514\u2500\u2500 TOSCA-Metadata\n    \u251c\u2500\u2500 Metadata.yaml\n    \u2514\u2500\u2500 TOSCA.meta \n\nThere are three two mandatory folders plus one optional.  Definitions  and  TOSCA-Metadata  are mandatory folder containing the metadata files and the experiment definition, as described in the following sections. the  Files  folder contains some additional files needed in case some resources specifies extra requirements.", 
            "title": "Experiment definition"
        }, 
        {
            "location": "/experiment-definition/#tosca-metadata", 
            "text": "The TOSCA-Metadata folder contains the TOSCA.meta file and the Metadata.yaml file. The TOSCA.meta file must contain the reference to the template in this case  Entry-Definitions :   Definitions/experiment.yaml . For example:  TOSCA-Meta-File-Version :   1.0  CSAR-Version :   1.1  Created-By :   MyCompany  Entry-Definitions :   Definitions/experiment.yaml   The Metadata.yaml contains experiment meta information:   the name  the start date  the end date   As follows: name :   Experiment Name  start-data :   9/5/17   10:00  end-data :   10/5/17   10:00", 
            "title": "TOSCA-Metadata"
        }, 
        {
            "location": "/experiment-definition/#definitions", 
            "text": "The experiment.yaml must follow a specific structure. An example is show in the following lines:  tosca_definitions_version :   tosca_simple_yaml_1_0  description :   Template for SoftFIRE yaml resource request definition  imports : \n   -   softfire_node_types :   http://docs.softfire.eu/etc/softfire_node_types.yaml  topology_template : \n   node_templates : \n     zabbix_server : \n       type :   MonitoringNode \n       properties : \n         resource_id :   monitoring \n\n     sdn_ericsson : \n       type :   SDNResource \n       properties : \n         resource_id :   sdn_ericsson \n         testbed :   ericsson \n\n     iperf : \n       type :   NFVResource \n       properties : \n         resource_id :   iperf \n         nsd_name :   The Iperf NSD \n         testbeds :   {   ALL :   ericsson   }   As shown in the example, the SoftFIRE experiment yaml file must contain the TOSCA definition version as  tosca_definitions_version :   tosca_simple_yaml_1_0 . This line is followed by a description of the experiment.  The imports section must be specified as in the example because the EM will only accept specific node types defined in  this document  Each node type specifies a  resource_id  that must be chosen from the available resources. The node name is arbitrary. Each node type can have some additional properties and they can be different from each others. Check the  node type specification  to understand all the node types. However, each node type is specified in the specific manager page:   SDNResource :  SDN Manager  NFVResource :  NFV Manager  MonitoringResource :  Monitoring Manager  SecurityResource :  Security Manager", 
            "title": "Definitions"
        }, 
        {
            "location": "/experiment-definition/#topology-template", 
            "text": "The topology template describe the actual experiment. The required nodes are listed in this section. The types are defined in the  node types  definitions, please refer to the specific manager page for the description of the type.", 
            "title": "Topology Template"
        }, 
        {
            "location": "/experiment-definition/#files", 
            "text": "", 
            "title": "Files"
        }, 
        {
            "location": "/experiment-definition/#example", 
            "text": "A full example can be found  here", 
            "title": "Example"
        }, 
        {
            "location": "/experiment-manager/", 
            "text": "Experiment Manager", 
            "title": "Experiment Manager"
        }, 
        {
            "location": "/experiment-manager/#experiment-manager", 
            "text": "", 
            "title": "Experiment Manager"
        }, 
        {
            "location": "/nfv-manager/", 
            "text": "NFV Manager\n\n\nThis is a NFV Manager page\n\n\nNFV Resource\n\n\nExplain NFVResource as per \nnode types page", 
            "title": "NFV Manager"
        }, 
        {
            "location": "/nfv-manager/#nfv-manager", 
            "text": "This is a NFV Manager page", 
            "title": "NFV Manager"
        }, 
        {
            "location": "/nfv-manager/#nfv-resource", 
            "text": "Explain NFVResource as per  node types page", 
            "title": "NFV Resource"
        }, 
        {
            "location": "/sdn-manager/", 
            "text": "SDN Manager\n\n\nThis is a SDN Manager page\n\n\nhere goes the description", 
            "title": "SDN Manager"
        }, 
        {
            "location": "/sdn-manager/#sdn-manager", 
            "text": "This is a SDN Manager page  here goes the description", 
            "title": "SDN Manager"
        }, 
        {
            "location": "/security-manager/", 
            "text": "Security Manager\n\n\nThis is a Security Manager page\n\n\nSecurity Resource\n\n\nExplain SecurityResource as per \nnode types page", 
            "title": "Security Manager"
        }, 
        {
            "location": "/security-manager/#security-manager", 
            "text": "This is a Security Manager page", 
            "title": "Security Manager"
        }, 
        {
            "location": "/security-manager/#security-resource", 
            "text": "Explain SecurityResource as per  node types page", 
            "title": "Security Resource"
        }, 
        {
            "location": "/monitoring-manager/", 
            "text": "Monitoring Manager\n\n\nThis is a SDN Manager page\n\n\nMonitoring resource\n\n\nExplain MonitoringResource as per \nnode types page", 
            "title": "Monitoring Manager"
        }, 
        {
            "location": "/monitoring-manager/#monitoring-manager", 
            "text": "This is a SDN Manager page", 
            "title": "Monitoring Manager"
        }, 
        {
            "location": "/monitoring-manager/#monitoring-resource", 
            "text": "Explain MonitoringResource as per  node types page", 
            "title": "Monitoring resource"
        }, 
        {
            "location": "/openvpnconfig/", 
            "text": "Open Vpn Manual Configuration\n\n\nThe OpenVPN server provides access into the SoftFIRE VPN for Experimenters.\nThe Experimenters can access the VPN using their experimenter certificate that was generated during the registration process.\n\n\nThere are two options to create the OpenVPN configuration file. You need to follow only one of these.\n\n\nOption one: Experimenter configuration file with external certificate file.\n\n\nThis solution needs two files that need to be placed in one folder, but it is easier to create.\n\n\nCreate a file \"softfire.ovpn\" and put the following text inside and store it in the same folder as the downloaded \"certificate.pem\"\n\n\ndev tun\nclient\nremote softfire-vpn.av.tu-berlin.de 443\n;proto udp\nproto tcp\nnobind\npersist-key\npersist-tun\ncomp-lzo\nkeepalive 10 120\nverb 3\nremote-cert-tls server\nresolv-retry infinite\nnobind\n\nca\n\n-----BEGIN CERTIFICATE-----\nMIIFAzCCA+ugAwIBAgIQLJdZE0PTZ7/N1PiCOH1EOzANBgkqhkiG9w0BAQsFADCB\npTELMAkGA1UEBhMCREUxDzANBgNVBAgMBkJlcmxpbjEPMA0GA1UEBwwGQmVybGlu\nMRIwEAYDVQQKDAlUVSBCZXJsaW4xCzAJBgNVBAsMAkFWMR4wHAYDVQQDDBVUVSBC\nZXJsaW4gU29mdEZJUkUgQ0ExMzAxBgkqhkiG9w0BCQEWJGF2LWluZnJhc3RydWN0\ndXJlQGxpc3RzLnR1LWJlcmxpbi5kZTAeFw0xNjA2MjcxNTMxNTlaFw0yMTA2MjYx\nNTMxNTlaMIGlMQswCQYDVQQGEwJERTEPMA0GA1UECAwGQmVybGluMQ8wDQYDVQQH\nDAZCZXJsaW4xEjAQBgNVBAoMCVRVIEJlcmxpbjELMAkGA1UECwwCQVYxHjAcBgNV\nBAMMFVRVIEJlcmxpbiBTb2Z0RklSRSBDQTEzMDEGCSqGSIb3DQEJARYkYXYtaW5m\ncmFzdHJ1Y3R1cmVAbGlzdHMudHUtYmVybGluLmRlMIIBIjANBgkqhkiG9w0BAQEF\nAAOCAQ8AMIIBCgKCAQEA1Fk2hti4hsahT8t+8fEfxrSAiJJDuXyj5g48mn37u8o2\n0VK/9STmG7nCiZQwtEIiz9MpxDo6oeap8qwJacp5V6RTZ5d3sPypfM5S06vxTOZX\nKsvWWv7E7An+O0J8I819mfg3/SkJJmu12i13f+r03+29hnlPZaXuqZnQmKFfolpP\nGHTaPLbn5aED17Lyg0eyFiCCXBes5FM9fBuqbSU+jDmfwd+nBcJG61oHdrGvp5vZ\ngUQm8X43sMeb/dP8ncHP3cft47A5QHc+GKDNroWW43almezOgByzzckG39eWqV0h\nE18Bts5y9BUdsYNJdZaLEWAPMLR8Li3LAx1gd2YVwQIDAQABo4IBKzCCAScwEgYD\nVR0TAQH/BAgwBgEB/wIBADAOBgNVHQ8BAf8EBAMCAQYwHQYDVR0OBBYEFDMfaUfm\nl6CQdssrpTLv4WG81BHhMIHhBgNVHSMEgdkwgdaAFDMfaUfml6CQdssrpTLv4WG8\n1BHhoYGrpIGoMIGlMQswCQYDVQQGEwJERTEPMA0GA1UECAwGQmVybGluMQ8wDQYD\nVQQHDAZCZXJsaW4xEjAQBgNVBAoMCVRVIEJlcmxpbjELMAkGA1UECwwCQVYxHjAc\nBgNVBAMMFVRVIEJlcmxpbiBTb2Z0RklSRSBDQTEzMDEGCSqGSIb3DQEJARYkYXYt\naW5mcmFzdHJ1Y3R1cmVAbGlzdHMudHUtYmVybGluLmRlghAsl1kTQ9Nnv83U+II4\nfUQ7MA0GCSqGSIb3DQEBCwUAA4IBAQCz6j6JMXbBUG0j4Ijx4JsuuuHaJBmBB/eN\nS6qthzg8F6wC45K2Xel0T3+uhFmnBbylWIVP0Xl3SthGeukJqT2VgnbRbYt6I17x\not8eUyZb495moDJ8wWN8XU6Atcl6igB2tNmsZkj5OnaepQTyy1Ocl8akHN4TNKD5\nolNy0TpH70+FfzuDRKGqfzivAT5P3l1zyRcRDSk4wVEXFB/95ZqX90AvPiLOfGAe\naEIbwcXwcVxYma83LhCiBZo3SQ1wH+cvOrDwQ/SY0u2fndpf5WqAeBj9A3aYgqCS\nlMg366OjDzFpNaTLX4HQPX682AuMj338NPLoPXXfyHxmIMN4ZRcs\n-----END CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\nMIIFmTCCBIGgAwIBAgICAQIwDQYJKoZIhvcNAQELBQAwgaUxCzAJBgNVBAYTAkRF\nMQ8wDQYDVQQIDAZCZXJsaW4xDzANBgNVBAcMBkJlcmxpbjESMBAGA1UECgwJVFUg\nQmVybGluMQswCQYDVQQLDAJBVjEeMBwGA1UEAwwVVFUgQmVybGluIFNvZnRGSVJF\nIENBMTMwMQYJKoZIhvcNAQkBFiRhdi1pbmZyYXN0cnVjdHVyZUBsaXN0cy50dS1i\nZXJsaW4uZGUwHhcNMTYwNzI3MTQ0ODQzWhcNMTgwNzI3MTQ0ODQzWjBgMQswCQYD\nVQQGEwJERTEPMA0GA1UECAwGQmVybGluMQ8wDQYDVQQHDAZCZXJsaW4xGTAXBgNV\nBAoMEEZyYXVuaG9mZXIgRk9LVVMxFDASBgNVBAMMC0ZpdGVhZ2xlIENBMIICIjAN\nBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEA3Hy2l7zLZRE306xu15X9jZFub7SS\nyiQxndC4zDun+av/TiQJU/gK1/TPo6Y0u2+sqpuTPCh6XBA2N63AmZzpZpSAMBux\nJTm+BOYIqa0GJ5tW5tKBMPH3pITdgsh256ckyf57LUKH66yQgTfJskpF5ovDMNUq\n6vZAvEVjXa/A3tUaB5NxcQeLixKJJrmuh2TBxN3OOWNKD8vyal6KKOTYpeaillZ9\nzqmtNr9nXnlhfMBZPXJBQmw2OOlaX5uIuceMkpg6TIVrNlbdJuS9TeTVmx1MtmVm\n73Q5ii2FcopYrV1v8W4C3atxFCTfmFRlrRm6sJ7ZRQhGtJphPZczwtqcC7MKJjQN\nbYeAG8BQHRnVQrVXr5+jrysqFWGoXGDISVprm0DjGij5ok2jIYaSgBpLVrD3e4eC\nLgYH58+f8u5tQxE1TxGCudAb0fSMy+GAe+5qbbEQkLc/+WXnGi4xTTozebmccJs8\nmbu5/BICYu5e53B58DFJy8x8qjLQjXuvspKqcPT5Dp07LmIu30sgrXG+Mdq1cWjV\nVHx9XwJz1c89Oy/6TandrznRfGVNAzXPenm3gr0wib7qwWlsSPTrBOcXyjMthV27\nwX6MK5GWWH+Uk5Z9a/V2JE9+J3KtEtk8D4xSEIQJ+pJZtXh1YxNzzYhY/czJLYdA\nloVSHOjwDmPtbEECAwEAAaOCARUwggERMAwGA1UdEwQFMAMBAf8wHQYDVR0OBBYE\nFMKA1MAJkTlwFZ5USVhoOJkZO4CDMIHhBgNVHSMEgdkwgdaAFDMfaUfml6CQdssr\npTLv4WG81BHhoYGrpIGoMIGlMQswCQYDVQQGEwJERTEPMA0GA1UECAwGQmVybGlu\nMQ8wDQYDVQQHDAZCZXJsaW4xEjAQBgNVBAoMCVRVIEJlcmxpbjELMAkGA1UECwwC\nQVYxHjAcBgNVBAMMFVRVIEJlcmxpbiBTb2Z0RklSRSBDQTEzMDEGCSqGSIb3DQEJ\nARYkYXYtaW5mcmFzdHJ1Y3R1cmVAbGlzdHMudHUtYmVybGluLmRlghAsl1kTQ9Nn\nv83U+II4fUQ7MA0GCSqGSIb3DQEBCwUAA4IBAQAYcCmGctVfnRZ6oL2z6qvn9Dhm\nHpt1zIC0pR7vKroi8OyGpv+BB7gHEXX0ecq8VtLKTcXWYR+7NdZS7IX8lyd81LiX\nXB1x09hEKH8O71T9v3TAMVtFDHmUito8cJQtPJFlVLZyL5xF+H0VHHEED4JP8xp4\nKPFd2Rt0ixTNnE3ccUgumty1X+xq0rWSCzOXy11TxOv2tzB7TA/O85XRw9QzE3jw\n4WjTS7tH9Phe/JTxbnhADS7k5mHZ+FDmX4xeTrXKNKv9+W1Qz9qQQ441IWpokBow\ntBeOMiadvRRQ2fhNuKCpgVUgyUyts0fFvDwJhLTnUqEbdgr19HbLO8GwqPbk\n-----END CERTIFICATE-----\n\n/ca\n\ncert certificate.pem\nkey certificate.pem\n\n\n\n\n\nOption two: config file with embedded keys\n\n\nThis solution only needs a single file, but this file as to be edited manually.\n\n\nCreate a file \"softfire.ovpn\" and put the following text inside and copy and paste your certificate from the downloaded \"certificate.pem\" into the \ncert\n section and your private key into the \nkey\n section\n\n\ndev tun\nclient\nremote softfire-vpn.av.tu-berlin.de 443\n;proto udp\nproto tcp\nnobind\npersist-key\npersist-tun\ncomp-lzo\nkeepalive 10 120\nverb 3\nremote-cert-tls server\nresolv-retry infinite\nnobind\n\nca\n\n-----BEGIN CERTIFICATE-----\nMIIFAzCCA+ugAwIBAgIQLJdZE0PTZ7/N1PiCOH1EOzANBgkqhkiG9w0BAQsFADCB\npTELMAkGA1UEBhMCREUxDzANBgNVBAgMBkJlcmxpbjEPMA0GA1UEBwwGQmVybGlu\nMRIwEAYDVQQKDAlUVSBCZXJsaW4xCzAJBgNVBAsMAkFWMR4wHAYDVQQDDBVUVSBC\nZXJsaW4gU29mdEZJUkUgQ0ExMzAxBgkqhkiG9w0BCQEWJGF2LWluZnJhc3RydWN0\ndXJlQGxpc3RzLnR1LWJlcmxpbi5kZTAeFw0xNjA2MjcxNTMxNTlaFw0yMTA2MjYx\nNTMxNTlaMIGlMQswCQYDVQQGEwJERTEPMA0GA1UECAwGQmVybGluMQ8wDQYDVQQH\nDAZCZXJsaW4xEjAQBgNVBAoMCVRVIEJlcmxpbjELMAkGA1UECwwCQVYxHjAcBgNV\nBAMMFVRVIEJlcmxpbiBTb2Z0RklSRSBDQTEzMDEGCSqGSIb3DQEJARYkYXYtaW5m\ncmFzdHJ1Y3R1cmVAbGlzdHMudHUtYmVybGluLmRlMIIBIjANBgkqhkiG9w0BAQEF\nAAOCAQ8AMIIBCgKCAQEA1Fk2hti4hsahT8t+8fEfxrSAiJJDuXyj5g48mn37u8o2\n0VK/9STmG7nCiZQwtEIiz9MpxDo6oeap8qwJacp5V6RTZ5d3sPypfM5S06vxTOZX\nKsvWWv7E7An+O0J8I819mfg3/SkJJmu12i13f+r03+29hnlPZaXuqZnQmKFfolpP\nGHTaPLbn5aED17Lyg0eyFiCCXBes5FM9fBuqbSU+jDmfwd+nBcJG61oHdrGvp5vZ\ngUQm8X43sMeb/dP8ncHP3cft47A5QHc+GKDNroWW43almezOgByzzckG39eWqV0h\nE18Bts5y9BUdsYNJdZaLEWAPMLR8Li3LAx1gd2YVwQIDAQABo4IBKzCCAScwEgYD\nVR0TAQH/BAgwBgEB/wIBADAOBgNVHQ8BAf8EBAMCAQYwHQYDVR0OBBYEFDMfaUfm\nl6CQdssrpTLv4WG81BHhMIHhBgNVHSMEgdkwgdaAFDMfaUfml6CQdssrpTLv4WG8\n1BHhoYGrpIGoMIGlMQswCQYDVQQGEwJERTEPMA0GA1UECAwGQmVybGluMQ8wDQYD\nVQQHDAZCZXJsaW4xEjAQBgNVBAoMCVRVIEJlcmxpbjELMAkGA1UECwwCQVYxHjAc\nBgNVBAMMFVRVIEJlcmxpbiBTb2Z0RklSRSBDQTEzMDEGCSqGSIb3DQEJARYkYXYt\naW5mcmFzdHJ1Y3R1cmVAbGlzdHMudHUtYmVybGluLmRlghAsl1kTQ9Nnv83U+II4\nfUQ7MA0GCSqGSIb3DQEBCwUAA4IBAQCz6j6JMXbBUG0j4Ijx4JsuuuHaJBmBB/eN\nS6qthzg8F6wC45K2Xel0T3+uhFmnBbylWIVP0Xl3SthGeukJqT2VgnbRbYt6I17x\not8eUyZb495moDJ8wWN8XU6Atcl6igB2tNmsZkj5OnaepQTyy1Ocl8akHN4TNKD5\nolNy0TpH70+FfzuDRKGqfzivAT5P3l1zyRcRDSk4wVEXFB/95ZqX90AvPiLOfGAe\naEIbwcXwcVxYma83LhCiBZo3SQ1wH+cvOrDwQ/SY0u2fndpf5WqAeBj9A3aYgqCS\nlMg366OjDzFpNaTLX4HQPX682AuMj338NPLoPXXfyHxmIMN4ZRcs\n-----END CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\nMIIFmTCCBIGgAwIBAgICAQIwDQYJKoZIhvcNAQELBQAwgaUxCzAJBgNVBAYTAkRF\nMQ8wDQYDVQQIDAZCZXJsaW4xDzANBgNVBAcMBkJlcmxpbjESMBAGA1UECgwJVFUg\nQmVybGluMQswCQYDVQQLDAJBVjEeMBwGA1UEAwwVVFUgQmVybGluIFNvZnRGSVJF\nIENBMTMwMQYJKoZIhvcNAQkBFiRhdi1pbmZyYXN0cnVjdHVyZUBsaXN0cy50dS1i\nZXJsaW4uZGUwHhcNMTYwNzI3MTQ0ODQzWhcNMTgwNzI3MTQ0ODQzWjBgMQswCQYD\nVQQGEwJERTEPMA0GA1UECAwGQmVybGluMQ8wDQYDVQQHDAZCZXJsaW4xGTAXBgNV\nBAoMEEZyYXVuaG9mZXIgRk9LVVMxFDASBgNVBAMMC0ZpdGVhZ2xlIENBMIICIjAN\nBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEA3Hy2l7zLZRE306xu15X9jZFub7SS\nyiQxndC4zDun+av/TiQJU/gK1/TPo6Y0u2+sqpuTPCh6XBA2N63AmZzpZpSAMBux\nJTm+BOYIqa0GJ5tW5tKBMPH3pITdgsh256ckyf57LUKH66yQgTfJskpF5ovDMNUq\n6vZAvEVjXa/A3tUaB5NxcQeLixKJJrmuh2TBxN3OOWNKD8vyal6KKOTYpeaillZ9\nzqmtNr9nXnlhfMBZPXJBQmw2OOlaX5uIuceMkpg6TIVrNlbdJuS9TeTVmx1MtmVm\n73Q5ii2FcopYrV1v8W4C3atxFCTfmFRlrRm6sJ7ZRQhGtJphPZczwtqcC7MKJjQN\nbYeAG8BQHRnVQrVXr5+jrysqFWGoXGDISVprm0DjGij5ok2jIYaSgBpLVrD3e4eC\nLgYH58+f8u5tQxE1TxGCudAb0fSMy+GAe+5qbbEQkLc/+WXnGi4xTTozebmccJs8\nmbu5/BICYu5e53B58DFJy8x8qjLQjXuvspKqcPT5Dp07LmIu30sgrXG+Mdq1cWjV\nVHx9XwJz1c89Oy/6TandrznRfGVNAzXPenm3gr0wib7qwWlsSPTrBOcXyjMthV27\nwX6MK5GWWH+Uk5Z9a/V2JE9+J3KtEtk8D4xSEIQJ+pJZtXh1YxNzzYhY/czJLYdA\nloVSHOjwDmPtbEECAwEAAaOCARUwggERMAwGA1UdEwQFMAMBAf8wHQYDVR0OBBYE\nFMKA1MAJkTlwFZ5USVhoOJkZO4CDMIHhBgNVHSMEgdkwgdaAFDMfaUfml6CQdssr\npTLv4WG81BHhoYGrpIGoMIGlMQswCQYDVQQGEwJERTEPMA0GA1UECAwGQmVybGlu\nMQ8wDQYDVQQHDAZCZXJsaW4xEjAQBgNVBAoMCVRVIEJlcmxpbjELMAkGA1UECwwC\nQVYxHjAcBgNVBAMMFVRVIEJlcmxpbiBTb2Z0RklSRSBDQTEzMDEGCSqGSIb3DQEJ\nARYkYXYtaW5mcmFzdHJ1Y3R1cmVAbGlzdHMudHUtYmVybGluLmRlghAsl1kTQ9Nn\nv83U+II4fUQ7MA0GCSqGSIb3DQEBCwUAA4IBAQAYcCmGctVfnRZ6oL2z6qvn9Dhm\nHpt1zIC0pR7vKroi8OyGpv+BB7gHEXX0ecq8VtLKTcXWYR+7NdZS7IX8lyd81LiX\nXB1x09hEKH8O71T9v3TAMVtFDHmUito8cJQtPJFlVLZyL5xF+H0VHHEED4JP8xp4\nKPFd2Rt0ixTNnE3ccUgumty1X+xq0rWSCzOXy11TxOv2tzB7TA/O85XRw9QzE3jw\n4WjTS7tH9Phe/JTxbnhADS7k5mHZ+FDmX4xeTrXKNKv9+W1Qz9qQQ441IWpokBow\ntBeOMiadvRRQ2fhNuKCpgVUgyUyts0fFvDwJhLTnUqEbdgr19HbLO8GwqPbk\n-----END CERTIFICATE-----\n\n/ca\n\n\ncert\n\n-----BEGIN CERTIFICATE-----\n**Paste Your Cert Text here**\n\n-----END CERTIFICATE-----\n\n/cert\n\n\nkey\n\n-----BEGIN PRIVATE KEY-----\n**Paste Your Cert Private Key here**\n\n-----END PRIVATE KEY-----\n\n/key", 
            "title": "OpenVPN Manual configuration"
        }, 
        {
            "location": "/openvpnconfig/#open-vpn-manual-configuration", 
            "text": "The OpenVPN server provides access into the SoftFIRE VPN for Experimenters.\nThe Experimenters can access the VPN using their experimenter certificate that was generated during the registration process.  There are two options to create the OpenVPN configuration file. You need to follow only one of these.", 
            "title": "Open Vpn Manual Configuration"
        }, 
        {
            "location": "/openvpnconfig/#option-one-experimenter-configuration-file-with-external-certificate-file", 
            "text": "This solution needs two files that need to be placed in one folder, but it is easier to create.  Create a file \"softfire.ovpn\" and put the following text inside and store it in the same folder as the downloaded \"certificate.pem\"  dev tun\nclient\nremote softfire-vpn.av.tu-berlin.de 443\n;proto udp\nproto tcp\nnobind\npersist-key\npersist-tun\ncomp-lzo\nkeepalive 10 120\nverb 3\nremote-cert-tls server\nresolv-retry infinite\nnobind ca \n-----BEGIN CERTIFICATE-----\nMIIFAzCCA+ugAwIBAgIQLJdZE0PTZ7/N1PiCOH1EOzANBgkqhkiG9w0BAQsFADCB\npTELMAkGA1UEBhMCREUxDzANBgNVBAgMBkJlcmxpbjEPMA0GA1UEBwwGQmVybGlu\nMRIwEAYDVQQKDAlUVSBCZXJsaW4xCzAJBgNVBAsMAkFWMR4wHAYDVQQDDBVUVSBC\nZXJsaW4gU29mdEZJUkUgQ0ExMzAxBgkqhkiG9w0BCQEWJGF2LWluZnJhc3RydWN0\ndXJlQGxpc3RzLnR1LWJlcmxpbi5kZTAeFw0xNjA2MjcxNTMxNTlaFw0yMTA2MjYx\nNTMxNTlaMIGlMQswCQYDVQQGEwJERTEPMA0GA1UECAwGQmVybGluMQ8wDQYDVQQH\nDAZCZXJsaW4xEjAQBgNVBAoMCVRVIEJlcmxpbjELMAkGA1UECwwCQVYxHjAcBgNV\nBAMMFVRVIEJlcmxpbiBTb2Z0RklSRSBDQTEzMDEGCSqGSIb3DQEJARYkYXYtaW5m\ncmFzdHJ1Y3R1cmVAbGlzdHMudHUtYmVybGluLmRlMIIBIjANBgkqhkiG9w0BAQEF\nAAOCAQ8AMIIBCgKCAQEA1Fk2hti4hsahT8t+8fEfxrSAiJJDuXyj5g48mn37u8o2\n0VK/9STmG7nCiZQwtEIiz9MpxDo6oeap8qwJacp5V6RTZ5d3sPypfM5S06vxTOZX\nKsvWWv7E7An+O0J8I819mfg3/SkJJmu12i13f+r03+29hnlPZaXuqZnQmKFfolpP\nGHTaPLbn5aED17Lyg0eyFiCCXBes5FM9fBuqbSU+jDmfwd+nBcJG61oHdrGvp5vZ\ngUQm8X43sMeb/dP8ncHP3cft47A5QHc+GKDNroWW43almezOgByzzckG39eWqV0h\nE18Bts5y9BUdsYNJdZaLEWAPMLR8Li3LAx1gd2YVwQIDAQABo4IBKzCCAScwEgYD\nVR0TAQH/BAgwBgEB/wIBADAOBgNVHQ8BAf8EBAMCAQYwHQYDVR0OBBYEFDMfaUfm\nl6CQdssrpTLv4WG81BHhMIHhBgNVHSMEgdkwgdaAFDMfaUfml6CQdssrpTLv4WG8\n1BHhoYGrpIGoMIGlMQswCQYDVQQGEwJERTEPMA0GA1UECAwGQmVybGluMQ8wDQYD\nVQQHDAZCZXJsaW4xEjAQBgNVBAoMCVRVIEJlcmxpbjELMAkGA1UECwwCQVYxHjAc\nBgNVBAMMFVRVIEJlcmxpbiBTb2Z0RklSRSBDQTEzMDEGCSqGSIb3DQEJARYkYXYt\naW5mcmFzdHJ1Y3R1cmVAbGlzdHMudHUtYmVybGluLmRlghAsl1kTQ9Nnv83U+II4\nfUQ7MA0GCSqGSIb3DQEBCwUAA4IBAQCz6j6JMXbBUG0j4Ijx4JsuuuHaJBmBB/eN\nS6qthzg8F6wC45K2Xel0T3+uhFmnBbylWIVP0Xl3SthGeukJqT2VgnbRbYt6I17x\not8eUyZb495moDJ8wWN8XU6Atcl6igB2tNmsZkj5OnaepQTyy1Ocl8akHN4TNKD5\nolNy0TpH70+FfzuDRKGqfzivAT5P3l1zyRcRDSk4wVEXFB/95ZqX90AvPiLOfGAe\naEIbwcXwcVxYma83LhCiBZo3SQ1wH+cvOrDwQ/SY0u2fndpf5WqAeBj9A3aYgqCS\nlMg366OjDzFpNaTLX4HQPX682AuMj338NPLoPXXfyHxmIMN4ZRcs\n-----END CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\nMIIFmTCCBIGgAwIBAgICAQIwDQYJKoZIhvcNAQELBQAwgaUxCzAJBgNVBAYTAkRF\nMQ8wDQYDVQQIDAZCZXJsaW4xDzANBgNVBAcMBkJlcmxpbjESMBAGA1UECgwJVFUg\nQmVybGluMQswCQYDVQQLDAJBVjEeMBwGA1UEAwwVVFUgQmVybGluIFNvZnRGSVJF\nIENBMTMwMQYJKoZIhvcNAQkBFiRhdi1pbmZyYXN0cnVjdHVyZUBsaXN0cy50dS1i\nZXJsaW4uZGUwHhcNMTYwNzI3MTQ0ODQzWhcNMTgwNzI3MTQ0ODQzWjBgMQswCQYD\nVQQGEwJERTEPMA0GA1UECAwGQmVybGluMQ8wDQYDVQQHDAZCZXJsaW4xGTAXBgNV\nBAoMEEZyYXVuaG9mZXIgRk9LVVMxFDASBgNVBAMMC0ZpdGVhZ2xlIENBMIICIjAN\nBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEA3Hy2l7zLZRE306xu15X9jZFub7SS\nyiQxndC4zDun+av/TiQJU/gK1/TPo6Y0u2+sqpuTPCh6XBA2N63AmZzpZpSAMBux\nJTm+BOYIqa0GJ5tW5tKBMPH3pITdgsh256ckyf57LUKH66yQgTfJskpF5ovDMNUq\n6vZAvEVjXa/A3tUaB5NxcQeLixKJJrmuh2TBxN3OOWNKD8vyal6KKOTYpeaillZ9\nzqmtNr9nXnlhfMBZPXJBQmw2OOlaX5uIuceMkpg6TIVrNlbdJuS9TeTVmx1MtmVm\n73Q5ii2FcopYrV1v8W4C3atxFCTfmFRlrRm6sJ7ZRQhGtJphPZczwtqcC7MKJjQN\nbYeAG8BQHRnVQrVXr5+jrysqFWGoXGDISVprm0DjGij5ok2jIYaSgBpLVrD3e4eC\nLgYH58+f8u5tQxE1TxGCudAb0fSMy+GAe+5qbbEQkLc/+WXnGi4xTTozebmccJs8\nmbu5/BICYu5e53B58DFJy8x8qjLQjXuvspKqcPT5Dp07LmIu30sgrXG+Mdq1cWjV\nVHx9XwJz1c89Oy/6TandrznRfGVNAzXPenm3gr0wib7qwWlsSPTrBOcXyjMthV27\nwX6MK5GWWH+Uk5Z9a/V2JE9+J3KtEtk8D4xSEIQJ+pJZtXh1YxNzzYhY/czJLYdA\nloVSHOjwDmPtbEECAwEAAaOCARUwggERMAwGA1UdEwQFMAMBAf8wHQYDVR0OBBYE\nFMKA1MAJkTlwFZ5USVhoOJkZO4CDMIHhBgNVHSMEgdkwgdaAFDMfaUfml6CQdssr\npTLv4WG81BHhoYGrpIGoMIGlMQswCQYDVQQGEwJERTEPMA0GA1UECAwGQmVybGlu\nMQ8wDQYDVQQHDAZCZXJsaW4xEjAQBgNVBAoMCVRVIEJlcmxpbjELMAkGA1UECwwC\nQVYxHjAcBgNVBAMMFVRVIEJlcmxpbiBTb2Z0RklSRSBDQTEzMDEGCSqGSIb3DQEJ\nARYkYXYtaW5mcmFzdHJ1Y3R1cmVAbGlzdHMudHUtYmVybGluLmRlghAsl1kTQ9Nn\nv83U+II4fUQ7MA0GCSqGSIb3DQEBCwUAA4IBAQAYcCmGctVfnRZ6oL2z6qvn9Dhm\nHpt1zIC0pR7vKroi8OyGpv+BB7gHEXX0ecq8VtLKTcXWYR+7NdZS7IX8lyd81LiX\nXB1x09hEKH8O71T9v3TAMVtFDHmUito8cJQtPJFlVLZyL5xF+H0VHHEED4JP8xp4\nKPFd2Rt0ixTNnE3ccUgumty1X+xq0rWSCzOXy11TxOv2tzB7TA/O85XRw9QzE3jw\n4WjTS7tH9Phe/JTxbnhADS7k5mHZ+FDmX4xeTrXKNKv9+W1Qz9qQQ441IWpokBow\ntBeOMiadvRRQ2fhNuKCpgVUgyUyts0fFvDwJhLTnUqEbdgr19HbLO8GwqPbk\n-----END CERTIFICATE----- /ca \ncert certificate.pem\nkey certificate.pem", 
            "title": "Option one: Experimenter configuration file with external certificate file."
        }, 
        {
            "location": "/openvpnconfig/#option-two-config-file-with-embedded-keys", 
            "text": "This solution only needs a single file, but this file as to be edited manually.  Create a file \"softfire.ovpn\" and put the following text inside and copy and paste your certificate from the downloaded \"certificate.pem\" into the  cert  section and your private key into the  key  section  dev tun\nclient\nremote softfire-vpn.av.tu-berlin.de 443\n;proto udp\nproto tcp\nnobind\npersist-key\npersist-tun\ncomp-lzo\nkeepalive 10 120\nverb 3\nremote-cert-tls server\nresolv-retry infinite\nnobind ca \n-----BEGIN CERTIFICATE-----\nMIIFAzCCA+ugAwIBAgIQLJdZE0PTZ7/N1PiCOH1EOzANBgkqhkiG9w0BAQsFADCB\npTELMAkGA1UEBhMCREUxDzANBgNVBAgMBkJlcmxpbjEPMA0GA1UEBwwGQmVybGlu\nMRIwEAYDVQQKDAlUVSBCZXJsaW4xCzAJBgNVBAsMAkFWMR4wHAYDVQQDDBVUVSBC\nZXJsaW4gU29mdEZJUkUgQ0ExMzAxBgkqhkiG9w0BCQEWJGF2LWluZnJhc3RydWN0\ndXJlQGxpc3RzLnR1LWJlcmxpbi5kZTAeFw0xNjA2MjcxNTMxNTlaFw0yMTA2MjYx\nNTMxNTlaMIGlMQswCQYDVQQGEwJERTEPMA0GA1UECAwGQmVybGluMQ8wDQYDVQQH\nDAZCZXJsaW4xEjAQBgNVBAoMCVRVIEJlcmxpbjELMAkGA1UECwwCQVYxHjAcBgNV\nBAMMFVRVIEJlcmxpbiBTb2Z0RklSRSBDQTEzMDEGCSqGSIb3DQEJARYkYXYtaW5m\ncmFzdHJ1Y3R1cmVAbGlzdHMudHUtYmVybGluLmRlMIIBIjANBgkqhkiG9w0BAQEF\nAAOCAQ8AMIIBCgKCAQEA1Fk2hti4hsahT8t+8fEfxrSAiJJDuXyj5g48mn37u8o2\n0VK/9STmG7nCiZQwtEIiz9MpxDo6oeap8qwJacp5V6RTZ5d3sPypfM5S06vxTOZX\nKsvWWv7E7An+O0J8I819mfg3/SkJJmu12i13f+r03+29hnlPZaXuqZnQmKFfolpP\nGHTaPLbn5aED17Lyg0eyFiCCXBes5FM9fBuqbSU+jDmfwd+nBcJG61oHdrGvp5vZ\ngUQm8X43sMeb/dP8ncHP3cft47A5QHc+GKDNroWW43almezOgByzzckG39eWqV0h\nE18Bts5y9BUdsYNJdZaLEWAPMLR8Li3LAx1gd2YVwQIDAQABo4IBKzCCAScwEgYD\nVR0TAQH/BAgwBgEB/wIBADAOBgNVHQ8BAf8EBAMCAQYwHQYDVR0OBBYEFDMfaUfm\nl6CQdssrpTLv4WG81BHhMIHhBgNVHSMEgdkwgdaAFDMfaUfml6CQdssrpTLv4WG8\n1BHhoYGrpIGoMIGlMQswCQYDVQQGEwJERTEPMA0GA1UECAwGQmVybGluMQ8wDQYD\nVQQHDAZCZXJsaW4xEjAQBgNVBAoMCVRVIEJlcmxpbjELMAkGA1UECwwCQVYxHjAc\nBgNVBAMMFVRVIEJlcmxpbiBTb2Z0RklSRSBDQTEzMDEGCSqGSIb3DQEJARYkYXYt\naW5mcmFzdHJ1Y3R1cmVAbGlzdHMudHUtYmVybGluLmRlghAsl1kTQ9Nnv83U+II4\nfUQ7MA0GCSqGSIb3DQEBCwUAA4IBAQCz6j6JMXbBUG0j4Ijx4JsuuuHaJBmBB/eN\nS6qthzg8F6wC45K2Xel0T3+uhFmnBbylWIVP0Xl3SthGeukJqT2VgnbRbYt6I17x\not8eUyZb495moDJ8wWN8XU6Atcl6igB2tNmsZkj5OnaepQTyy1Ocl8akHN4TNKD5\nolNy0TpH70+FfzuDRKGqfzivAT5P3l1zyRcRDSk4wVEXFB/95ZqX90AvPiLOfGAe\naEIbwcXwcVxYma83LhCiBZo3SQ1wH+cvOrDwQ/SY0u2fndpf5WqAeBj9A3aYgqCS\nlMg366OjDzFpNaTLX4HQPX682AuMj338NPLoPXXfyHxmIMN4ZRcs\n-----END CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\nMIIFmTCCBIGgAwIBAgICAQIwDQYJKoZIhvcNAQELBQAwgaUxCzAJBgNVBAYTAkRF\nMQ8wDQYDVQQIDAZCZXJsaW4xDzANBgNVBAcMBkJlcmxpbjESMBAGA1UECgwJVFUg\nQmVybGluMQswCQYDVQQLDAJBVjEeMBwGA1UEAwwVVFUgQmVybGluIFNvZnRGSVJF\nIENBMTMwMQYJKoZIhvcNAQkBFiRhdi1pbmZyYXN0cnVjdHVyZUBsaXN0cy50dS1i\nZXJsaW4uZGUwHhcNMTYwNzI3MTQ0ODQzWhcNMTgwNzI3MTQ0ODQzWjBgMQswCQYD\nVQQGEwJERTEPMA0GA1UECAwGQmVybGluMQ8wDQYDVQQHDAZCZXJsaW4xGTAXBgNV\nBAoMEEZyYXVuaG9mZXIgRk9LVVMxFDASBgNVBAMMC0ZpdGVhZ2xlIENBMIICIjAN\nBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEA3Hy2l7zLZRE306xu15X9jZFub7SS\nyiQxndC4zDun+av/TiQJU/gK1/TPo6Y0u2+sqpuTPCh6XBA2N63AmZzpZpSAMBux\nJTm+BOYIqa0GJ5tW5tKBMPH3pITdgsh256ckyf57LUKH66yQgTfJskpF5ovDMNUq\n6vZAvEVjXa/A3tUaB5NxcQeLixKJJrmuh2TBxN3OOWNKD8vyal6KKOTYpeaillZ9\nzqmtNr9nXnlhfMBZPXJBQmw2OOlaX5uIuceMkpg6TIVrNlbdJuS9TeTVmx1MtmVm\n73Q5ii2FcopYrV1v8W4C3atxFCTfmFRlrRm6sJ7ZRQhGtJphPZczwtqcC7MKJjQN\nbYeAG8BQHRnVQrVXr5+jrysqFWGoXGDISVprm0DjGij5ok2jIYaSgBpLVrD3e4eC\nLgYH58+f8u5tQxE1TxGCudAb0fSMy+GAe+5qbbEQkLc/+WXnGi4xTTozebmccJs8\nmbu5/BICYu5e53B58DFJy8x8qjLQjXuvspKqcPT5Dp07LmIu30sgrXG+Mdq1cWjV\nVHx9XwJz1c89Oy/6TandrznRfGVNAzXPenm3gr0wib7qwWlsSPTrBOcXyjMthV27\nwX6MK5GWWH+Uk5Z9a/V2JE9+J3KtEtk8D4xSEIQJ+pJZtXh1YxNzzYhY/czJLYdA\nloVSHOjwDmPtbEECAwEAAaOCARUwggERMAwGA1UdEwQFMAMBAf8wHQYDVR0OBBYE\nFMKA1MAJkTlwFZ5USVhoOJkZO4CDMIHhBgNVHSMEgdkwgdaAFDMfaUfml6CQdssr\npTLv4WG81BHhoYGrpIGoMIGlMQswCQYDVQQGEwJERTEPMA0GA1UECAwGQmVybGlu\nMQ8wDQYDVQQHDAZCZXJsaW4xEjAQBgNVBAoMCVRVIEJlcmxpbjELMAkGA1UECwwC\nQVYxHjAcBgNVBAMMFVRVIEJlcmxpbiBTb2Z0RklSRSBDQTEzMDEGCSqGSIb3DQEJ\nARYkYXYtaW5mcmFzdHJ1Y3R1cmVAbGlzdHMudHUtYmVybGluLmRlghAsl1kTQ9Nn\nv83U+II4fUQ7MA0GCSqGSIb3DQEBCwUAA4IBAQAYcCmGctVfnRZ6oL2z6qvn9Dhm\nHpt1zIC0pR7vKroi8OyGpv+BB7gHEXX0ecq8VtLKTcXWYR+7NdZS7IX8lyd81LiX\nXB1x09hEKH8O71T9v3TAMVtFDHmUito8cJQtPJFlVLZyL5xF+H0VHHEED4JP8xp4\nKPFd2Rt0ixTNnE3ccUgumty1X+xq0rWSCzOXy11TxOv2tzB7TA/O85XRw9QzE3jw\n4WjTS7tH9Phe/JTxbnhADS7k5mHZ+FDmX4xeTrXKNKv9+W1Qz9qQQ441IWpokBow\ntBeOMiadvRRQ2fhNuKCpgVUgyUyts0fFvDwJhLTnUqEbdgr19HbLO8GwqPbk\n-----END CERTIFICATE----- /ca  cert \n-----BEGIN CERTIFICATE-----\n**Paste Your Cert Text here**\n\n-----END CERTIFICATE----- /cert  key \n-----BEGIN PRIVATE KEY-----\n**Paste Your Cert Private Key here**\n\n-----END PRIVATE KEY----- /key", 
            "title": "Option two: config file with embedded keys"
        }
    ]
}